<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:s="using:System" xmlns:telerikListBox="using:Telerik.Windows.Controls.DataBoundListBox" xmlns:telerikPrimitives="using:Telerik.Windows.Controls" xmlns:ImageButton="using:Telerik.Windows.Controls.ImageButton">
  <ResourceDictionary.MergedDictionaries>
    <ResourceDictionary Source="AppColors.xaml" />
    <ResourceDictionary Source="AppTexts.xaml" />
  </ResourceDictionary.MergedDictionaries>
  <Style x:Key="TextBoxHeaderStyle" TargetType="ContentControl">
    <Setter Property="Foreground" Value="{StaticResource DefaultTextColor}" />
    <!--<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeNormal}" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" />-->
    <Setter Property="Padding" Value="0,0,0,8" />
    <Setter Property="HorizontalAlignment" Value="Left" />
  </Style>
  <Style x:Key="PullToRefreshIndicator" TargetType="telerikListBox:PullToRefreshIndicatorControl">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="telerikListBox:PullToRefreshIndicatorControl">
          <Border RenderTransformOrigin="1, 0" x:Name="PART_LayoutRoot" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
            <Border.RenderTransform>
              <RotateTransform x:Name="Rotation" />
            </Border.RenderTransform>
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="DefaultStates">
                <VisualState x:Name="Normal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Indicator" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                    <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RefreshTimeLabel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BusyIndicator" Storyboard.TargetProperty="IsRunning">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <s:Boolean>
                                                        False
                                                    </s:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="IndicatorRotate" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.5" EnableDependentAnimation="True">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="RefreshStarting">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Indicator" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="1" />
                    </ObjectAnimationUsingKeyFrames>
                    <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RefreshTimeLabel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Visible"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BusyIndicator" Storyboard.TargetProperty="IsRunning">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <s:Boolean>
                                                        False
                                                    </s:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                    <DoubleAnimation Storyboard.TargetName="IndicatorRotate" Storyboard.TargetProperty="Angle" To="-180" Duration="0:0:0.5" EnableDependentAnimation="True">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Refreshing">
                  <Storyboard>
                    <DoubleAnimation Storyboard.TargetName="IndicatorRotate" Storyboard.TargetProperty="Angle" To="0" Duration="0:0:0.5" EnableDependentAnimation="True">
                      <DoubleAnimation.EasingFunction>
                        <CubicEase EasingMode="EaseOut" />
                      </DoubleAnimation.EasingFunction>
                    </DoubleAnimation>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_Indicator" Storyboard.TargetProperty="Opacity">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                    </ObjectAnimationUsingKeyFrames>
                    <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetName="PART_RefreshTimeLabel" Storyboard.TargetProperty="Visibility">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BusyIndicator" Storyboard.TargetProperty="IsRunning">
                      <DiscreteObjectKeyFrame KeyTime="0">
                        <DiscreteObjectKeyFrame.Value>
                          <s:Boolean>
                                                        True
                                                    </s:Boolean>
                        </DiscreteObjectKeyFrame.Value>
                      </DiscreteObjectKeyFrame>
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
              <VisualStateGroup x:Name="OrientationStates">
                <VisualState x:Name="Vertical">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Rotation" Storyboard.TargetProperty="Angle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="0" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="Horizontal">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Rotation" Storyboard.TargetProperty="Angle">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="-90" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid x:Name="NormalLayout" Margin="{StaticResource PhoneHorizontalMargin}">
              <Grid HorizontalAlignment="Center" Margin="20">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto" />
                  <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="PART_Indicator" Margin="{StaticResource PhoneMargin}" RenderTransformOrigin="0.5, 0.5">
                  <ContentPresenter.ContentTemplate>
                    <DataTemplate>
                      <Grid>
                        <Image Grid.Column="0" Height="32" Width="32" Source="../Assets/Icons/blue-arrow.png" Stretch="Uniform">
                          <Image.RenderTransform>
                            <RotateTransform x:Name="SpinningRotateTransform" CenterX="16" CenterY="16" />
                          </Image.RenderTransform>
                        </Image>
                      </Grid>
                    </DataTemplate>
                  </ContentPresenter.ContentTemplate>
                  <ContentPresenter.RenderTransform>
                    <RotateTransform x:Name="IndicatorRotate" Angle="0" />
                  </ContentPresenter.RenderTransform>
                </ContentPresenter>
                <telerikPrimitives:RadBusyIndicator AnimationStyle="AnimationStyle7" ContentPosition="Right" Foreground="{StaticResource PhoneForegroundBrush}" HorizontalAlignment="Left" VerticalAlignment="Stretch" VerticalContentAlignment="Top" Content="{x:Null}" x:Name="BusyIndicator" />
                <StackPanel VerticalAlignment="Center" Grid.Column="1" Orientation="Vertical">
                  <TextBlock x:Name="PART_RefreshInfoLabel" Text="{Binding Path=LocalizedResources.Refresh_Pull, Source={StaticResource LocalizedStrings}}" Style="{StaticResource ThemeColorLabel}" />
                </StackPanel>
              </Grid>
            </Grid>
          </Border>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <ImageButton:ThicknessToDoubleConverter x:Key="ThicknessToDoubleConverter" />
  <ImageButton:ImageButtonShapeToVisibilityConverter x:Key="ImageButtonShapeToVisibilityConverter" />
  <SolidColorBrush x:Key="PressedStateWithOpacityMaskForegroundFillBrush" Color="White" />
  <Style x:Key="HorizontalImageButton" TargetType="telerikPrimitives:RadImageButton">
    <Setter Property="HorizontalAlignment" Value="Left" />
    <Setter Property="VerticalAlignment" Value="Top" />
    <Setter Property="BorderThickness" Value="0" />
    <!--<Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}" xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" />-->
    <Setter Property="Background" Value="Transparent" />
    <Setter Property="MinWidth" Value="32" />
    <Setter Property="MinHeight" Value="32" />
    <Setter Property="FontSize" Value="22" />
    <Setter Property="Foreground" Value="{StaticResource DefaultBackgroundColor}" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="telerikPrimitives:RadImageButton">
          <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">
            <VisualStateManager.VisualStateGroups>
              <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="RestState" />
                <VisualState x:Name="PressedState">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Source" Storyboard.TargetName="PART_ButtonImage">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding PressedStateImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledState">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Source" Storyboard.TargetName="PART_ButtonImage">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding DisabledStateImageSource, RelativeSource={RelativeSource TemplatedParent}}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="RectangleButtonBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="EllipseButtonBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="RestStateWithOpacityMask">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_ButtonImage">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="PressedStateWithOpacityMask">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_ButtonImage">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                    <!--<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="RectangleButtonBackground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneAccentBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>
                                        <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="RectangleButtonForeground">
                                            <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PressedStateWithOpacityMaskForegroundFillBrush}"/>
                                        </ObjectAnimationUsingKeyFrames>-->
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="EllipseButtonBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneAccentBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="EllipseButtonForeground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PressedStateWithOpacityMaskForegroundFillBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
                <VisualState x:Name="DisabledStateWithOpacityMask">
                  <Storyboard>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" Storyboard.TargetName="PART_ButtonImage">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="Collapsed" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="RectangleButtonBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="RectangleButtonBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TransparentBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="RectangleButtonForeground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Stroke" Storyboard.TargetName="EllipseButtonBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="EllipseButtonBackground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource TransparentBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill" Storyboard.TargetName="EllipseButtonForeground">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentControl">
                      <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}" />
                    </ObjectAnimationUsingKeyFrames>
                  </Storyboard>
                </VisualState>
              </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="auto" />
              </Grid.ColumnDefinitions>
              <Rectangle x:Name="RectangleButtonBackground" Fill="{TemplateBinding Background}" MinWidth="{Binding MinWidth, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding MinHeight, RelativeSource={RelativeSource TemplatedParent}}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding ButtonShape, ConverterParameter=Rectangle, Converter={StaticResource ImageButtonShapeToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
              <Rectangle x:Name="RectangleButtonForeground" Fill="{TemplateBinding Foreground}" MinWidth="{Binding MinWidth, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding MinHeight, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding ButtonShape, ConverterParameter=Rectangle, Converter={StaticResource ImageButtonShapeToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                <Rectangle.OpacityMask>
                  <ImageBrush x:Name="PART_RectangleOpacityMaskImageBrush" />
                </Rectangle.OpacityMask>
              </Rectangle>
              <Ellipse x:Name="EllipseButtonBackground" Fill="{TemplateBinding Background}" MinWidth="{Binding MinWidth, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding MinHeight, RelativeSource={RelativeSource TemplatedParent}}" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{Binding BorderThickness, Converter={StaticResource ThicknessToDoubleConverter}, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding ButtonShape, ConverterParameter=Ellipse, Converter={StaticResource ImageButtonShapeToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}" />
              <Ellipse x:Name="EllipseButtonForeground" Fill="{TemplateBinding Foreground}" MinWidth="{Binding MinWidth, RelativeSource={RelativeSource TemplatedParent}}" MinHeight="{Binding MinHeight, RelativeSource={RelativeSource TemplatedParent}}" Visibility="{Binding ButtonShape, ConverterParameter=Ellipse, Converter={StaticResource ImageButtonShapeToVisibilityConverter}, RelativeSource={RelativeSource TemplatedParent}}">
                <Ellipse.OpacityMask>
                  <ImageBrush x:Name="PART_EllipseOpacityMaskImageBrush" />
                </Ellipse.OpacityMask>
              </Ellipse>
              <Image x:Name="PART_ButtonImage" CacheMode="BitmapCache" Stretch="{TemplateBinding ImageStretch}" />
              <ContentControl Margin="10,0,0,0" Grid.Column="1" x:Name="ContentControl" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
</ResourceDictionary>
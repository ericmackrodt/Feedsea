<Page
    x:Class="Feedsea.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Feedsea"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:helpers="using:Feedsea.Common.Helpers"
    xmlns:uc="using:Feedsea.UserControls"
    xmlns:controls="using:Feedsea.Common.Controls"
    helpers:TitleBar.BackgroundColor="{ThemeResource TitleBarBackground}"
    helpers:TitleBar.ForegroundColor="{ThemeResource TitleBarForeground}"
    helpers:TitleBar.ButtonBackgroundColor="{ThemeResource TitleBarBackground}"
    helpers:TitleBar.ButtonForegroundColor="{ThemeResource TitleBarForeground}"
    RequestedTheme="Default"
    DataContext="{Binding Main, Source={StaticResource ViewModels}}"
    mc:Ignorable="d">
    <Page.Resources>
        <DataTemplate x:Key="ListingTemplate">
            <uc:ListingViewControl Loaded="ViewControl_Loaded" />
        </DataTemplate>

        <DataTemplate x:Key="CardsTemplate">
            <uc:CardsViewControl Loaded="ViewControl_Loaded" />
        </DataTemplate>
    </Page.Resources>
    <Grid x:Name="LayoutRoot" Background="{ThemeResource PageBackgroundColor}">
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="ArticleTemplate">
                <VisualState x:Name="CardTemplate">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding  ArticleViewTemplate, Converter={StaticResource EnumToBool}, ConverterParameter=Cards}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CtrlArticlesListing.ContentTemplate" Value="{StaticResource CardsTemplate}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="ListingTemplate">
                    <VisualState.StateTriggers>
                        <StateTrigger IsActive="{Binding  ArticleViewTemplate, Converter={StaticResource EnumToBool}, ConverterParameter=Listing}" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="CtrlArticlesListing.ContentTemplate" Value="{StaticResource ListingTemplate}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
            <VisualStateGroup x:Name="OrientationStates">
                <VisualState x:Name="MobileState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="0" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplMain.IsPaneOpen" Value="False" />
                        <Setter Target="SplMain.DisplayMode" Value="Overlay" />
                        <Setter Target="BtnSplitView.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="Mobile6InchState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="400" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplMain.IsPaneOpen" Value="False" />
                        <Setter Target="SplMain.DisplayMode" Value="CompactOverlay" />
                        <Setter Target="BtnSplitView.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplMain.IsPaneOpen" Value="False" />
                        <Setter Target="SplMain.DisplayMode" Value="CompactOverlay" />
                        <Setter Target="BtnSplitView.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="NarrowToMediumState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="720" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplMain.IsPaneOpen" Value="True" />
                        <Setter Target="SplMain.DisplayMode" Value="Inline" />
                        <Setter Target="BtnSplitView.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="MediumState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="900" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplMain.IsPaneOpen" Value="True" />
                        <Setter Target="SplMain.DisplayMode" Value="Inline" />
                        <Setter Target="BtnSplitView.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="SemiWideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1200" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplMain.IsPaneOpen" Value="True" />
                        <Setter Target="SplMain.DisplayMode" Value="Inline" />
                        <Setter Target="BtnSplitView.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="WideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1600" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplMain.IsPaneOpen" Value="True" />
                        <Setter Target="SplMain.DisplayMode" Value="Inline" />
                        <Setter Target="BtnSplitView.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="UltraWideState">
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="1920" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="SplMain.IsPaneOpen" Value="True" />
                        <Setter Target="SplMain.DisplayMode" Value="Inline" />
                        <Setter Target="BtnSplitView.Visibility" Value="Collapsed" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>

        <Grid.RowDefinitions>
            <RowDefinition Height="auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        
        <!--Header-->
        <Grid Grid.Row="0" Background="{ThemeResource ThemeMainColor}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <Button x:Name="BtnSplitView" Grid.Column="0" Style="{StaticResource AppHeaderButton}"
                Click="BtnSplitView_Click"/>
            <Image x:Name="ImgLogo" Grid.Column="1" Source="Assets/logo.png" Height="20" Margin="10" HorizontalAlignment="Left" />

            <Button Grid.Column="1" x:Name="BtnTemplateType" Style="{StaticResource AppHeaderButton}" HorizontalAlignment="Right"
                    Command="{Binding ChangeArticleViewTemplateCommand}" Content="{Binding ArticleViewTemplate, Converter={StaticResource IntToChar}}"/>
        </Grid>
        
        <!--Body-->
        <SplitView x:Name="SplMain" Grid.Row="1" IsPaneOpen="True" DisplayMode="Inline" OpenPaneLength="280"
                   PanePlacement="Left" PaneBackground="{ThemeResource PanelBackgroundColor}" CompactPaneLength="42">
            <SplitView.Content>
                <Grid HorizontalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>
                    <ProgressRing Grid.Row="0" IsActive="{Binding IsBusy}" Width="100" Height="100" />
                    <ContentControl Grid.Row="0" x:Name="CtrlArticlesListing" ContentTemplate="{StaticResource CardsTemplate}" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" />
                    <CommandBar Grid.Row="1" ClosedDisplayMode="Compact" VerticalAlignment="Bottom">
                        <CommandBar.PrimaryCommands>
                            <AppBarButton x:Uid="MainPage_Refresh" Label="[Refresh]" Icon="Refresh" Command="{Binding RefreshNewsCommand}" />
                            <AppBarButton x:Name="BtnGoToTop" x:Uid="MainPage_GoToTop" Label="[GoToTop]" Icon="Up" Click="BtnGoToTop_Click" />
                            <AppBarButton x:Uid="MainPage_MarkAllRead" Label="[MarkAllRead]" Icon="Accept" Command="{Binding MarkAllReadCommand}" />
                        </CommandBar.PrimaryCommands>

                        <CommandBar.SecondaryCommands>
                            <AppBarButton x:Uid="MainPage_Settings" Label="[Settings]" Icon="Setting" />
                        </CommandBar.SecondaryCommands>
                    </CommandBar>
                </Grid>
            </SplitView.Content>
            <SplitView.Pane>
                <uc:SidePanelControl x:Name="Sidebar" IsBarExpanded="{Binding IsPaneOpen, ElementName=SplMain}" SidebarClicked="SideBarControl_SidebarClicked" ItemSelectedCommand="{Binding SelectSourceCommand}" />
                <!--<uc:SideBarControl x:Name="Sidebar" ItemSelectedCommand="{Binding SelectSourceCommand}" IsExpanded="{Binding IsPaneOpen, ElementName=SplMain}" SidebarClicked="SideBarControl_SidebarClicked" />-->
            </SplitView.Pane>
        </SplitView>
    </Grid>
</Page>
